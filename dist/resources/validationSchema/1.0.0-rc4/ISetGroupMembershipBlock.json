{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/ISetGroupMembershipBlock",
  "definitions": {
    "ISetGroupMembershipBlock": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "A globally unique identifier for this Block.  (See UUID Format: https://floip.gitbook.io/flow-specification/flows#uuid-format)",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
        },
        "name": {
          "type": "string",
          "description": "A human-readable \"variable name\" for this block. This must be restricted to word characters so that it can be used as a variable name in expressions. When blocks write results output, they write to a variable corresponding the name of the block.",
          "pattern": "^[a-zA-Z_]\\w*$"
        },
        "label": {
          "type": "string",
          "description": "A human-readable free-form description for this Block."
        },
        "semantic_label": {
          "type": "string",
          "description": "A user-controlled field that can be used to code the meaning of the data collected by this block in a standard taxonomy or coding system, * e.g.: a FHIR ValueSet, an industry-specific coding system like SNOMED CT, or an organization's internal taxonomy service. (e.g. \"SNOMEDCT::Gender finding\")"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "an arbitrary list of strings for categorization of the block's content, meaning, etc. This has a similar purpose to semantic_label, but the assumption is that many related blocks might have the same tags."
        },
        "vendor_metadata": {
          "type": "object",
          "description": "A set of key-value elements that is not controlled by the Specification, but could be relevant to a specific vendor/platform/implementation."
        },
        "ui_metadata": {
          "$ref": "#/definitions/IBlockUIMetadata",
          "description": "A set of key-value records describing information about how blocks are displayed on a UI/flowchart editor"
        },
        "type": {
          "type": "string",
          "description": "A specific string designating the type or \"subclass\" of this Block. This must be one of the Block type names within the specification, such as Core.RunFlow or MobilePrimitives.Message."
        },
        "config": {
          "$ref": "#/definitions/ISetGroupMembershipBlockConfig",
          "description": "Additional parameters that are specific to the type of the block. Details are provided within the Block documentation."
        },
        "exits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IBlockExit"
          },
          "description": "a list of all the exits for the block. Exits must contain the required keys below, and can contain additional keys based on the Block type"
        }
      },
      "required": [
        "config",
        "exits",
        "name",
        "type",
        "uuid"
      ],
      "additionalProperties": false
    },
    "IBlockUIMetadata": {
      "type": "object",
      "properties": {
        "canvas_coordinates": {
          "$ref": "#/definitions/IBlockUIMetadataCanvasCoordinates"
        },
        "should_auto_update_name": {
          "type": "boolean"
        }
      },
      "required": [
        "canvas_coordinates",
        "should_auto_update_name"
      ],
      "description": "A set of key-value records describing information about how blocks are displayed on a UI/flowchart editor"
    },
    "IBlockUIMetadataCanvasCoordinates": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "additionalProperties": false,
      "description": "Coordinates indicating location of this block on the Flow Builder's canvas"
    },
    "ISetGroupMembershipBlockConfig": {
      "type": "object",
      "properties": {
        "set_contact_property": {
          "$ref": "#/definitions/SetContactProperty"
        },
        "clear": {
          "type": "boolean",
          "description": "When `clear` is present and set `true`, this will remove the contact from all groups. In this case, the other fields, i.e., `is_member` and `groups` will be ignored."
        },
        "is_member": {
          "type": "boolean"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IGroupMembership"
          }
        }
      },
      "description": "Adding or removing contact from group(s)"
    },
    "SetContactProperty": {
      "type": "object",
      "properties": {
        "property_key": {
          "type": "string"
        },
        "property_value": {
          "type": "string",
          "format": "floip-expression"
        }
      },
      "required": [
        "property_key",
        "property_value"
      ],
      "additionalProperties": false
    },
    "IGroupMembership": {
      "type": "object",
      "properties": {
        "group_key": {
          "type": "string"
        },
        "group_name": {
          "type": "string"
        }
      },
      "required": [
        "group_key",
        "group_name"
      ],
      "additionalProperties": false
    },
    "IBlockExit": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "A globally unique identifier for this Block.  (See UUID Format: https://floip.gitbook.io/flow-specification/flows#uuid-format)",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
        },
        "name": {
          "type": "string",
          "description": "This is an identifier for the exit, suitable for use in rolling up results (e.g.: \"male\"), and to display on flowchart canvases. Expressions can reference the name of the exit taken out of another block via @(flow.block_name.exit)."
        },
        "destination_block": {
          "type": "string",
          "description": "This is the uuid of the Block this exit connects to. It can be null if the exit does not connect to a block (if it is the final block).",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
        },
        "semantic_label": {
          "type": "string",
          "description": "A user-controlled field that can be used to code the meaning of the data collected by this block in a standard taxonomy or coding system, e.g.: a FHIR ValueSet, an industry-specific coding system like SNOMED CT, or an organization's internal taxonomy service. (e.g. \"SNOMEDCT::Feminine Gender\")"
        },
        "test": {
          "type": "string",
          "description": "For blocks that evaluate conditions, this is an expression that determines whether this exit will be selected as the path out of the block. The first exit with an expression that evaluates to a \"truthy\" value will be chosen.",
          "format": "floip-expression"
        },
        "vendor_metadata": {
          "type": "object",
          "description": "A set of key-value elements that is not controlled by the Specification, but could be relevant to a specific vendor/platform/implementation."
        },
        "default": {
          "type": "boolean",
          "description": "If this key is present and true, the exit is treated as the flow-through default in a case evaluation. The block will terminate through this exit if no test expressions in other exits evaluate true.."
        }
      },
      "required": [
        "uuid",
        "name"
      ],
      "additionalProperties": false,
      "description": "Block Exit: https://floip.gitbook.io/flow-specification/flows#exit-node-specification"
    }
  }
}